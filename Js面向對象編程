来源：
  廖雪峰的官方网站
内容：
  Js中所有數據都是對象，对象可通过各种方式，也可通过构造器创建对象
  构造器通过new表达式创建对象
  如 new Date(2018,01)创建Date对象，而Date()方法返回字符串
  构造器生成的对象都是隐式引用（对象的原型），链接到构造器的Prototype属性
  Js不区分类和实例，通过原型（prototype）来实现面向对象编程
  定义：
    var student={
      name：'Robot',
      height:1.6,
      run:function(){console.log(this.name,this.height)}
    }
    通过原型来创建对象
    var xiaoming={
      name:'xiaoming'
    }
    xiaoming.__proto_=student;
    将xiaoming对象的原型指向student，则小明看上去从student继承
    在代码编写时，不要直接obj._proto_去改变一个对象的原型
    低版本无法使用_proto_属性
    
    object.create()方法可以传入一个原型对象，并创建一个基于该原型的新对象
    但新对象没有任何属性
    
    
    创建对象
    js对每个创建的对象都会设置一个原型指向他的原型对象
    
    
    序列化对象
    把对象转化为字符串类型（json字符串）
    JSON.stringify(value[,replacer][,space])
    value:输入的对象 数组或对象
    
    replacer:方法，数组
    value为数组时，replacer为方法function name（key，value）{} 
    返回方法处理数组的返回值
    value为数组，replacer为数  
    返回第一个数组
    value为对象，replacer为数组
    返回对象中key为数组中value数据
    
    space：输出的Json格式，数字则键值对缩进多少个字符
            转义字符/t则每行一个回车
            字符串，在每行前添加字符串
            
    将JSON反序列化成對象
    JSON.parse(value)
    
   
